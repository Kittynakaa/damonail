import React, { useState } from "react";
import Swal from "sweetalert2";   // ‚úÖ import SweetAlert2
import { useNavigate } from "react-router-dom";  
import "./Register.css"; // ‡πÉ‡∏ä‡πâ‡πÑ‡∏ü‡∏•‡πå CSS ‡πÅ‡∏¢‡∏Å

export default function Register() {
    const [activeTab, setActiveTab] = useState("login");
  
    // ----- LOGIN -----
    const [loginForm, setLoginForm] = useState({ id: "", pw: "", remember: false });
    const [loginHint, setLoginHint] = useState({ id: "", pw: "" });
  
    // ----- REGISTER -----
    const [regForm, setRegForm] = useState({
      firstname: "", lastname: "", phone: "", email: "",
      password: "", confirm: "", accept: false,
    });
    const [regHint, setRegHint] = useState({ phone: "" });
    const [regMessage, setRegMessage] = useState("");
  
    const navigate = useNavigate();                 // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°
    const phoneRe = /^(0[689]\d{8})$/;
  
    const handleLoginSubmit = async (e) => {
      e.preventDefault();
      const idOk = !!loginForm.id.trim();
      const pwOk = loginForm.pw.length >= 8;
  
      setLoginHint({
        id: idOk ? "" : "‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£",
        pw: pwOk ? "" : "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£",
      });
  
      if (idOk && pwOk) {
        // ‚úÖ ‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home2
        await Swal.fire({
          title: "‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
          icon: "success",
          timer: 1200,
          showConfirmButton: false,
          draggable: true,
        });
        navigate("/home2");                          // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏°‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤ Home2
      }
    };
  
    const handleRegisterSubmit = (e) => {
      e.preventDefault();
      setRegMessage("");
  
      if (!regForm.firstname || !regForm.lastname || !regForm.email || !regForm.password || !regForm.confirm) {
        return setRegMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      }
      if (!phoneRe.test(regForm.phone)) {
        return setRegMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 10 ‡∏´‡∏•‡∏±‡∏Å");
      }
      if (regForm.password.length < 6) {
        return setRegMessage("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£");
      }
      if (regForm.password !== regForm.confirm) {
        return setRegMessage("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
      }
      if (!regForm.accept) {
        return setRegMessage("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß");
      }
  
      console.log("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å payload:", regForm);
      setRegMessage("‚úÖ ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (‡πÄ‡∏î‡πÇ‡∏°)");
  
      Swal.fire({
        title: "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
        text: "‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏±‡∏ö NailFinder üéâ",
        icon: "success",
        confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
        draggable: true,
      });
    };
  

  return (
    <div className="register-scope">
      <main className="main">
        <h1>‡∏ö‡∏±‡∏ç‡∏ä‡∏µ</h1>

        {/* Tabs */}
        <div className="tabs" role="tablist" aria-label="‡∏™‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°">
          <div
            className={`tab ${activeTab === "login" ? "active" : ""}`}
            onClick={() => setActiveTab("login")}
          >
            ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ
          </div>
          <div
            className={`tab ${activeTab === "register" ? "active" : ""}`}
            onClick={() => setActiveTab("register")}
          >
            ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô
          </div>
        </div>

        {/* LOGIN */}
        {activeTab === "login" && (
          <section id="panel-login">
            <p className="lead">
              ‡∏Ç‡∏≠‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏™‡∏π‡πà NailFinder<br />
              ‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
            </p>
            <form onSubmit={handleLoginSubmit} noValidate>
              <div className="field">
                <div className="label">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏´‡∏£‡∏∑‡∏≠‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</div>
                <div className="input-underline">
                  <input
                    type="text"
                    placeholder="you@example.com ‡∏´‡∏£‡∏∑‡∏≠ 08x-xxx-xxxx"
                    value={loginForm.id}
                    onChange={(e) => setLoginForm({ ...loginForm, id: e.target.value })}
                  />
                </div>
                <div className="hint">{loginHint.id}</div>
              </div>
              <div className="field">
                <div className="label">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</div>
                <div className="input-underline">
                  <input
                    type="password"
                    placeholder="‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£"
                    value={loginForm.pw}
                    onChange={(e) => setLoginForm({ ...loginForm, pw: e.target.value })}
                  />
                </div>
                <div className="hint">{loginHint.pw}</div>
              </div>
              <label className="check">
                <input
                  type="checkbox"
                  checked={loginForm.remember}
                  onChange={(e) => setLoginForm({ ...loginForm, remember: e.target.checked })}
                />
                ‡πÇ‡∏õ‡∏£‡∏î‡∏à‡∏î‡∏à‡∏≥‡∏â‡∏±‡∏ô (‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å)
              </label>

              <button className="btn btn-primary" type="submit" >‡∏•‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ä‡πâ</button>
            </form>
          </section>
        )}

        {/* REGISTER */}
        {activeTab === "register" && (
          <section id="panel-register">
            <p className="lead">
              ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ NailFinder ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏à‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì ‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°<br />
              ‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
            </p>
            <form onSubmit={handleRegisterSubmit} noValidate>
              <div className="field">
                <div className="label">‡∏ä‡∏∑‡πà‡∏≠</div>
                <div className="input-underline">
                  <input
                    type="text"
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏à‡∏£‡∏¥‡∏á"
                    value={regForm.firstname}
                    onChange={(e) => setRegForm({ ...regForm, firstname: e.target.value })}
                  />
                </div>
              </div>
              <div className="field">
                <div className="label">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</div>
                <div className="input-underline">
                  <input
                    type="text"
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                    value={regForm.lastname}
                    onChange={(e) => setRegForm({ ...regForm, lastname: e.target.value })}
                  />
                </div>
              </div>
              <div className="field">
                <div className="label">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</div>
                <div className="input-underline">
                  <input
                    type="tel"
                    placeholder="08x-xxx-xxxx"
                    value={regForm.phone}
                    onChange={(e) => setRegForm({ ...regForm, phone: e.target.value })}
                  />
                </div>
                <div className="hint">{regHint.phone}</div>
              </div>
              <div className="field">
                <div className="label">‡∏≠‡∏µ‡πÄ‡∏°‡∏•</div>
                <div className="input-underline">
                  <input
                    type="email"
                    placeholder="you@example.com"
                    value={regForm.email}
                    onChange={(e) => setRegForm({ ...regForm, email: e.target.value })}
                  />
                </div>
              </div>
              <div className="field">
                <div className="label">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</div>
                <div className="input-underline">
                  <input
                    type="password"
                    placeholder="‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£"
                    value={regForm.password}
                    onChange={(e) => setRegForm({ ...regForm, password: e.target.value })}
                  />
                </div>
              </div>
              <div className="field">
                <div className="label">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</div>
                <div className="input-underline">
                  <input
                    type="password"
                    placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á"
                    value={regForm.confirm}
                    onChange={(e) => setRegForm({ ...regForm, confirm: e.target.value })}
                  />
                </div>
              </div>
              <label className="check">
                <input
                  type="checkbox"
                  checked={regForm.accept}
                  onChange={(e) => setRegForm({ ...regForm, accept: e.target.checked })}
                />
                ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß
              </label>

              <button className="btn btn-primary" type="submit">‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</button>

              {regMessage && (
                <p className="hint" style={{ color: regMessage.startsWith("‚úÖ") ? "green" : "red" }}>
                  {regMessage}
                </p>
              )}
            </form>
          </section>
        )}
      </main>
    </div>
  );
}
